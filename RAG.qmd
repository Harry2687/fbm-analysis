---
title: "Retrieval Augmented Generation"
format: html
---

# Convert json files to single txt file.

```{python}
import modules.preprocessing as prep

chat_data = prep.ms_import_data('data/the_office')

# standard cleaning stuff
chat_data['clean_content'] = (
    chat_data['content']
    .str.strip()
    .str.replace('[^a-zA-Z0-9\\s]', '', regex=True)
    .str.replace('\\s{2,}', ' ', regex=True)
)

# export with timestamps
chat_data['conv_text'] = (
    chat_data['sender_name'] + 
    ' at ' + 
    chat_data['timestamp'].dt.strftime('%Y-%m-%d %H:%M:%S') + 
    ': ' + 
    chat_data['clean_content']
)
chat_content = chat_data[['conv_text']]
chat_content.to_csv('source_documents/chatlog_w_timestamp.txt', index=False, header=False)

# export without timestamps
chat_data['conv_text'] = (
    chat_data['sender_name'] + 
    ': ' + 
    chat_data['clean_content']
)
chat_content = chat_data[['conv_text']]
chat_content.to_csv('source_documents/chatlog.txt', index=False, header=False)
```

# Test RAG with different settings

```{python}
from modules.models import ChatFBM
from modules.rag_demo import rag_demo
import os
```

## Default chunk length and overlap, 10 chunks context

```{python}
theoffice = ChatFBM('llama3.1')
db_path = 'databases/chatlog_vectordb'

if not os.path.exists(db_path):
    theoffice.ingest(file_path='source_documents/chatlog.txt', db_path=db_path)

theoffice.load_db(db_path)

# Check number of chunks in db
len(theoffice.vector_store.get()['documents'])
```

```{python}
rag_demo('What games does Harry talk about?', 'databases/chatlog_vectordb')
```

```{python}
theoffice = ChatFBM('llama3.1')
db_path = 'databases/chatlog_chunk100'

if not os.path.exists(db_path):
    theoffice.ingest(
        file_path='source_documents/chatlog.txt', 
        db_path=db_path, 
        chunk_size=100, 
        chunk_overlap=10
    )

theoffice.load_db(db_path)

# Check number of chunks in db
len(theoffice.vector_store.get()['documents'])
```

```{python}
rag_demo('What games does Harry talk about?', 'databases/chatlog_chunk100')
```

```{python}
theoffice = ChatFBM('llama3.1')
db_path = 'databases/chatlog_chunk500'

if not os.path.exists(db_path):
    theoffice.ingest(
        file_path='source_documents/chatlog.txt', 
        db_path=db_path, 
        chunk_size=500, 
        chunk_overlap=50
    )

theoffice.load_db(db_path)

# Check number of chunks in db
len(theoffice.vector_store.get()['documents'])
```

```{python}
rag_demo('What games does Harry talk about?', 'databases/chatlog_chunk500', context_size=12)
```